import java.util.Scanner;

public class QueueProgram {
    private static int MAX_SIZE;
    private static int[] queue;
    private static int front = -1;
    private static int rear = -1;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the maximum size of the queue: ");
        MAX_SIZE = scanner.nextInt();
        queue = new int[MAX_SIZE];

        while (true) {
            System.out.println("\nQueue Operations:");
            System.out.println("1. Enqueue");
            System.out.println("2. Dequeue");
            System.out.println("3. Get Front");
            System.out.println("4. Get Rear");
            System.out.println("5. Print Queue");
            System.out.println("6. Exit");

            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    enqueue(scanner);
                    break;
                case 2:
                    dequeue();
                    break;
                case 3:
                    getFront();
                    break;
                case 4:
                    getRear();
                    break;
                case 5:
                    printQueue();
                    break;
                case 6:
                    scanner.close();
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    public static void enqueue(Scanner scanner) {
        if (rear == MAX_SIZE - 1) {
            System.out.println("Queue is full. Cannot enqueue.");
            return;
        }
        if (front == -1) {
            front = 0;
        }
        System.out.print("Enter the item to enqueue: ");
        int item = scanner.nextInt();
        queue[++rear] = item;
        System.out.println("Enqueued: " + item);
    }

    public static void dequeue() {
        if (front == -1) {
            System.out.println("Queue is empty. Cannot dequeue.");
            return;
        }
        int item = queue[front];
        if (front == rear) {
            front = rear = -1;
        } else {
            front++;
        }
        System.out.println("Dequeued: " + item);
    }

    public static void getFront() {
        if (front == -1) {
            System.out.println("Queue is empty.");
        } else {
            System.out.println("Front element: " + queue[front]);
        }
    }

    public static void getRear() {
        if (front == -1) {
            System.out.println("Queue is empty.");
        } else {
            System.out.println("Rear element: " + queue[rear]);
        }
    }

    public static void printQueue() {
        if (front == -1) {
            System.out.println("Queue is empty.");
        } else {
            System.out.print("Queue: ");
            for (int i = front; i <= rear; i++) {
                System.out.print(queue[i] + " ");
            }
            System.out.println();
        }
    }
}
